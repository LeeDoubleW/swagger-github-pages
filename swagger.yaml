---
openapi: 3.0.1
info:
  title: e-커머스 Mock API
  description: Swagger Api Documentation
  version: v1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Product
  description: 상품 관련 API
- name: Coupon
  description: 쿠폰발급, 쿠폰사용, 쿠폰조회 API
- name: 주문
  description: 주문 관련 API
- name: User
  description: 잔액 충전 및 조회 API
paths:
  "/order/order":
    post:
      tags:
      - 주문
      summary: 주문
      description: 주문을 요청합니다.
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/order/list":
    post:
      tags:
      - 주문
      summary: 주문목록 조회
      description: 주문목록을 조회합니다.
      operationId: getOrderList
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/coupon/{userId}/issue":
    post:
      tags:
      - Coupon
      summary: 쿠폰 발급
      description: 쿠폰을 발급합니다.
      operationId: issueCoupon
      parameters:
      - name: userId
        in: path
        description: 쿠폰을 발급받을 사용자 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/user/{userId}":
    get:
      tags:
      - User
      summary: 잔액 조회
      description: 유저의 잔액을 조회합니다.
      operationId: getBalance
      parameters:
      - name: userId
        in: path
        description: 유저ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/user/{userId}/charge":
    get:
      tags:
      - User
      summary: 잔액 충전
      description: 유저의 잔액을 충전합니다.
      operationId: getBalance_1
      parameters:
      - name: arg0
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/BalanceRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/product/{productId}":
    get:
      tags:
      - Product
      summary: 상품 상세 조회
      description: 상품 ID를 기반으로 상세 정보를 조회합니다.
      operationId: getProduct
      parameters:
      - name: arg0
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/ProductRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/product/popularProduct":
    get:
      tags:
      - Product
      summary: 인기 상품 조회
      description: 최근 3일간 가장 많이 팔린 상위 5개 상품을 조회합니다.
      operationId: getPopularProducts
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  "/product/list":
    get:
      tags:
      - Product
      summary: 상품 목록 조회
      description: 전체 상품 목록을 조회합니다.
      operationId: productList
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/order/detail/{orderId}":
    get:
      tags:
      - 주문
      summary: 주문상세
      description: 주문상세내역을 조회합니다.
      operationId: getOrder
      parameters:
      - name: orderId
        in: path
        description: 주문ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/order/cancel/{orderId}":
    get:
      tags:
      - 주문
      summary: 주문취소
      description: 주문을 취소요청합니다.
      operationId: orderCancel
      parameters:
      - name: orderId
        in: path
        description: 주문ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/coupon/{userId}/use":
    get:
      tags:
      - Coupon
      summary: 쿠폰사용
      description: 유저의 쿠폰을 조회합니다.
      operationId: getBalance_2
      parameters:
      - name: arg0
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/CouponRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/coupon/{userId}/list":
    get:
      tags:
      - Coupon
      summary: 보유쿠폰 목록조회
      description: 유저가 보유한 쿠폰 목록을 조회합니다.
      operationId: getUserCoupons
      parameters:
      - name: userId
        in: path
        description: 사용자 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
components:
  schemas:
    OrderRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        couponId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    BalanceRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
    ProductRequest:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        productNm:
          type: string
        categoryId:
          type: integer
          format: int64
        price:
          type: integer
          format: int64
    CouponRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        couponId:
          type: integer
          format: int64
